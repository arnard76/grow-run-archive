name: Count Lines of Code

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  pull_request:
    paths-ignore: .github/workflows/**
    branches: [development, master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  cloc:
    env:
      PULL_REQUEST_BRANCH_REPORT: cloc_${{ github.event.pull_request.head.label }}.md
      MERGE_BRANCH_REPORT: cloc_${{ github.event.pull_request.base.label }}.md
    permissions:
      pull-requests: write
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs djdefi/cloc-action
      - name: Count Lines of Code (cloc)
        uses: djdefi/cloc-action@7
        with:
          options: . --vcs=git \
            --exclude-list-file=package-lock.json \
            --exclude-dir=e2e-tests \
            --md --report-file=${{ env.PULL_REQUEST_BRANCH_REPORT }}
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v3
        with:
          file-path: ${{ env.PULL_REQUEST_BRANCH_REPORT }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-tag: execution

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.sha }}

      # Runs djdefi/cloc-action
      - name: Count Lines of Code (cloc)
        uses: djdefi/cloc-action@7
        with:
          options: . --vcs=git \
            --exclude-list-file=package-lock.json \
            --exclude-dir=e2e-tests \
            --md --report-file=${{ env.MERGE_BRANCH_REPORT }}
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v3
        with:
          file-path: ${{ env.MERGE_BRANCH_REPORT }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-tag: execution
